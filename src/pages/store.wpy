<!--/pages/store-->
<template>
  <view class="item store-header" wx:if="{{storeId > 0}}">
    <navigator style="background: url('{{ store.storePic }}')"
               url="/pages/store_desc?storeId={{storeId}}&{{storeData}}">
      <image class="store-logo" src="{{store.storeIcon}}"></image>
      <text>{{store.storeName}}</text>
      <image class="icon" src="../images/icon-right-circle.png"></image>
    </navigator>
  </view>
  <!--<view class="fifler">-->
  <!--<filterBar @currentType.user="currentType"></filterBar>-->
  <!--</view>-->
  <view class="store_list">
    <!--矩阵商品列表模块-->
    <shopGridList :purchasetype.sync="purchasetype" :list.sync="list"></shopGridList>
    <!--加载更多时动画-->
    <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
    <!--暂无数据显示-->
    <placeholder :show.sync="isEmpty" message="暂无发现数据"></placeholder>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import api from '../api/api';
  import FilterBar from "../components/filter_bar"
  import ShopGridList from '../components/shop_grid_list'
  import BottomLoadMore from "../components/common/bottomLoadMore"
  import Placeholder from "../components/common/placeholder"
  import tip from '../utils/tip'

  export default class HomeDetail extends wepy.page {
    config = {
      navigationBarTitleText: '',
    };
    data = {
      storeId: 0,
      storeData: "",
      store: {
        stateCode: 0,
        storeArea: "",
        storeIcon: "",
        storeName: "",
        storeNote: "",
        storePhone: "",
        storePic: ""
      },
      catCode: "",
      cate: {},
      list: [],
      purchasetype: 1,
      isEmpty: false,
      pageSize: 10,
      //当前页面
      currentPage: 1,
      //总页数
      totalPage: 0,
      //是否显示 底部loading
      showLoading: true,
      //防止重复加载
      preventRepeatReuqest: false,
      sort: 1,
      skuval: ""
    };
    components = {
      filterBar: FilterBar,
      shopGridList: ShopGridList,
      bottomLoadMore: BottomLoadMore,
      placeholder: Placeholder
    };

    async getGoodList(currentPage) {
      let that = this;
      const json = await api.storeProductList(this.storeId, currentPage, that.pageSize);
      if (json && json.statusCode === 200) {
        const result = json.data;
        if (result.stateCode === 0) {
          that.list = [...that.list, ...result.products];
          that.totalPage = Math.ceil(result.totalSize / that.pageSize);
          console.log(result, that.totalPage);
        } else {
          tip.error(result.message)
        }
      } else {
        if (json) {
          tip.error(json.errMsg);
        }
      }
      that.showLoading = false;
      that.$apply();
    }

    async getStoreInfo() {
      let that = this;
      const json = await api.storeDetail(that.storeId);
      if (json && json.statusCode === 200) {
        const result = json.data;
        if (result.stateCode === 0) {
          that.store = result;
          wx.setNavigationBarTitle({ title: that.store.storeName });
          const arr = [];
          for (let k in that.store) {
            if (k !== "message" && k !== "stateCode") {
              arr.push(`${k}=${that.store[k]}`);
            }
          }
          that.storeData = arr.join("&");
        } else {
          tip.error('stateCode:' + result.stateCode + ',message:' + result.message)
        }
      } else {
        if (json) {
          tip.error(json.errMsg);
        }
      }
      that.$apply();
    }

    onLoad(option) {
      this.storeId = option.id;
      this.cate = {};
      this.list = [];
      this.skuval = "";
      this.catCode = option.code;
      this.isEmpty = false;
      //当前页面
      this.currentPage = 1;
      //总页数
      this.totalPage = 0;
      //是否显示 底部loading
      this.showLoading = true;
      this.getStoreInfo();
      //防止重复加载
      this.preventRepeatReuqest = false;
      this.sort = 1;
      console.log("id===" + this.catCode);
      //this.list = bb.result.products;
      //this.$apply();
      this.getGoodList(1, 10);
    }

    computed = {};
    methods = {
      currentType(obj) {
        //tip.success("状态:" + obj);
        // var name = obj.name;
        // var type = obj.type;
        // if (name == "zhonghe") {
        //   this.sort = -1;
        // } else if (name == "sale") {
        //   this.sort = 3;
        // } else if (name == "price") {
        //   if (type == "desc") {
        //     this.sort = 2;
        //   } else if (type == "asc") {
        //     this.sort = 1;
        //   }
        // } else if (name == "sku") {
        //   this.skuval = type;
        // }
        // this.list = [];
        // this.showLoading = true;
        // this.isEmpty = false;
        // this.getGoodList();
      },
      onShareAppMessage: function (res) {
        if (res.from === 'button') {
          // 来自页面内转发按钮
          console.log(res.target)
        }
        return {
          title: this.cate.name,
          path: '/pages/home_detail?id=' + this.catCode,
          success: function (res) {
            // 转发成功
          },
          fail: function (res) {
            // 转发失败
          }
        }
      }
    };

    events = {};

    //加载更多
    onReachBottom() {
      let that = this;
      that.showLoading = true;
      console.log(that.totalPage + "===" + that.currentPage);
      //判断总页数是否大于翻页数
      if ((that.totalPage) > that.currentPage) {
        //防止重复加载
        if (that.preventRepeatReuqest) {
          return true;
        }
        that.preventRepeatReuqest = true;
        that.currentPage++;
        that.getGoodList(that.currentPage);
        that.preventRepeatReuqest = false;
      } else {
        that.showLoading = false;
      }
    };
  }

</script>
<style lang="less">
  page {
    background: #fff;
  }

  .store-header {

    navigator {
      height: ~"150rpx";
      color: #ffffff;
    }

    .store-logo {
      height: ~"80rpx";
      width: ~"80rpx";
      border-radius: 50%;
      margin-top: ~"34rpx";
      float: left;
      margin-left: ~"50rpx";
    }

    text {
      font-size: ~"40rpx";
      margin-left: ~"10rpx";
      margin-top: ~"50rpx";
      float: left;
    }

    .icon {
      height: ~"22rpx";
      width: ~"22rpx";
      float: left;
      margin-left: ~"20rpx";
      margin-top: ~"66rpx";
    }

  }

</style>
