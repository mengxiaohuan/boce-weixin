<!--地址管理-->
<template>
  <view class="address">
    <repeat for="{{addressList}}" key="index.id" index="index" item="item">
      <view class="list_box" @tap="changeAddress({{item.id}})">
        <view class="item_box">
          <swipeDelete :swipeData="item" @delItem.user="handleDelItem">
            <view class="address_list">
              <view class="title">
                <view class="user_info">
                  <text class="name">{{item.name}}</text>
                  <text class="phone">{{item.mobile}}</text>
                </view>
                <view class="active_address">
                  <text class="defult" wx:if="{{item.isdefault}}"> [默认]</text>
                  {{item.fullAreaName}}{{item.homeAddress}}
                </view>
              </view>
            </view>
          </swipeDelete>
        </view>
        <!--<icon class="icon_check" type="success" color="{{item.isdefault ? 'red':'#ddd'}}" wx:if="{{type === 'order'}}"/>-->
      </view>
    </repeat>
  </view>
  <view class="add_wrap">
    <view class="button type_red" @tap="add">新增地址</view>
  </view>
</template>
<script>

  import wepy from 'wepy';
  import api from "../api/api";
  import tip from '@/utils/tip';
  import SwipeDelete from '../components/common/wepy-swipe-delete'


  export default class Address extends wepy.page {
    config = {
      navigationBarTitleText: '地址管理',
    };

    data = {
      addressList: [],
      type:'',
    };

    async getUserAddress() {
      const json = await api.addressList();

      if (json.data.stateCode === 0) {
        this.addressList = json.data.data;
      } else {
        tip.error(json.data.message);
      }
      this.$apply();
    }

    async delUserAddress(id) {
      const json = await api.delAddress(id);

      if (json.data.stateCode === 0) {
        tip.success("删除成功");
        this.getUserAddress();
      } else {
        tip.error(json.data.msg)
      }
    }
//选择地址：修改该地址为默认地址，返回上一级菜单
    async updateAddress(addressId){
      let json = await api.editAddress(addressId, 1);
      if(json != null && json.data.stateCode === 0){
        wepy.navigateBack({
          delta: 1
        });
      }else {
        tip.error(json.data.message);
      }
    }
    components = {
      swipeDelete: SwipeDelete
    };

    onLoad(option) {
      this.type = option.type;
    }

    onShow() {
      this.getUserAddress();
    }

    computed = {};

    methods = {
      add(){
        wepy.navigateTo({url:'/pages/address_add'});
      },
      //左滑删除
      handleDelItem(itemData) {
        this.delUserAddress(itemData.id);
      },

      refreshList(val) {
        if (val === undefined) return;
        this.addressList = val;
        this.$apply();
      },
      changeAddress(addressId){
        if(this.type === 'order') this.updateAddress(addressId);
      }
    };

    events = {}

  }

</script>
<style lang="less">

  page{
    background: #fff;
  }

  .list_box {
    height: 150rpx;
    width: 750rpx;
    border-top: 1px solid #efefef;
    display: flex;
    justify-content: space-between;
    align-items:center;

    .item_box{
      width: 750rpx;
      height: 100%;
    }

    .icon_check{
      width: 100rpx;
    }
  }

  .address {

    .list_box:last-child {
      border-bottom: 1px solid #efefef;
    }

    .address_list {
      display: flex;
      justify-content: space-between;
      height: 150rpx;
      align-items: center;
      padding: 0 35rpx;

      .title {
        color: #000;
        width: 100%;
      }

      .arrow {
        height: 150rpx;
        line-height: 150rpx;
        width: 150rpx;
        text-align: center;
        color: #9a9a9a;
      }

      .user_info {
        color: #1a1a1a;
        display:flex;
        justify-content:space-between;
        align-items:center;
      }

      .active_address {
        margin-top: 20rpx;
      }

      .defult {
        color: #ea4a3a;
      }
    }
  }

  .add_wrap {
    display: block;
    width: 95%;
    left: 0;
    right: 0;
    position: absolute;
    bottom: 20rpx;
    margin: 0 auto;
  }
</style>
