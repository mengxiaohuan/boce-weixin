<!--绑定手机号-->
<template>
  <view>
    <view class="hr"></view>
    <form bindsubmit="formSubmit">
      <view class="section">
        <input name="mobile" type="number" bindinput="phoneInput" placeholder="请输入手机号" maxlength="11"/>
      </view>
      <view class="hr"></view>
      <view class="section">
        <input name="code" class="code" type="text" placeholder="请输入验证码"/>
        <view class="send-code">
          <view @tap="sendCode">{{sendMsgDisabled ? '等待' + time + '秒' : '获取验证码'}}</view>
        </view>
      </view>
      <view class="hr"></view>
      <view class="footer-link">
        为了获取更优质的服务，请您绑定手机号！
      </view>
      <view class="comfire-btn">
        <button class="button" formType="submit">绑定</button>
      </view>
    </form>
  </view>
</template>
<script>

  import wepy from 'wepy';
  import api from "../api/api";
  import tip from '@/utils/tip';
  import util from '../utils/util';
  import {TOKEN, TOKEN_GENERATE_TIME, LOGIN_STATE, USER_ID, CART} from '../utils/constant';

  export default class BindAccount extends wepy.page {
    config = {
      navigationBarTitleText: '绑定手机号',
    };

    data = {
      phone: "",
      sendMsgDisabled: false,
      time: 60,
      storageList: {}
    };

    components = {};
    onLoad() {
    }

    onShow() {
    }

    computed = {};

    async sendVerifyCodeSearch() {
      const json = await api.sendVerifyCodeBindMobile(this.phone);
      if (json && json.data && json.data.stateCode === 0) {
        tip.success("已发送");
        return true;
      } else {
        tip.error(json.data.message);
        return false;
      }
    }

    methods = {
      phoneInput(e) {
        this.phone = e.detail.value;
      },
      async sendCode(e) {
        if (this.sendMsgDisabled) {
          return;
        }

        if (this.phone.length === 0) {
          tip.alert("输入手机号码");
          return false;
        }

        if(!util.vailPhone(this.phone)){
          tip.alert('手机号不正确');
          return false;
        }

        let ret = await this.sendVerifyCodeSearch();
        if (ret) {
          let that = this;
          that.sendMsgDisabled = true;
          let interval = setInterval(() => {
            if ((that.time--) <= 0) {
              that.time = 60;
              that.sendMsgDisabled = false;
              clearInterval(interval);
              that.$apply();
            }
            that.$apply();
          }, 1000);
        }
      },
      async formSubmit(e) {
        let mobile = e.detail.value.mobile;
        let code = e.detail.value.code;
        if (mobile.length === 0) {
          tip.alert("请输入手机号码");
          return false;
        }

        if (code.length === 0) {
          tip.alert("请输入验证码");
          return false;
        }

        let json = await api.bindMobile(mobile, code);
        if (json && json.data && json.data.stateCode === 0) {
          wepy.setStorageSync(TOKEN, json.data.token);
          wepy.setStorageSync(TOKEN_GENERATE_TIME, new Date().getTime());
          wepy.setStorageSync(LOGIN_STATE, json.data.stateCode === 0);
          wepy.setStorageSync(USER_ID, json.data.userId);
          for (let i = 0; i < json.data.stores.length; i++) {
            let store = json.data.stores[i];
            for (let j=0;j<store.products.length;j++) {
              let product = store.products[j];
              let number = store.products[j].number;
              this.storageList[product.id] = number;
            }
          }
          wepy.setStorageSync(CART, this.storageList);

          tip.toast('绑定成功', function () {
            wepy.switchTab({
              url: "/pages/info"
            });
          });
        } else {
          tip.error(json.data.message);
        }
      },
    };

    events = {}

  }

</script>
<style lang="less">
  .tip{
    padding: 40rpx 40rpx 10rpx;
  }
  .section {
    display: flex;
    align-items: center;
    padding: 20rpx 40rpx;
    background: #fff;
  }

  .btn_comfire {
    padding: 0 40rpx;

    button {
      background: #fe9c9d;
      color: #ffffff;
    }

  }

  .hr {
    border-bottom: 1px solid #eee;
  }

  .send-code {
    border-left: 1px solid #eee;
    padding-left: 90rpx;
    height: 60rpx;
    line-height: 60rpx;
    margin-left: 15rpx;
    view {
      width: 200rpx;
    }
  }

  .comfire-btn {
    padding: 50rpx;
    .button {
      background: #fe9c9d;
      color: #ffffff;
    }
  }

  .footer-link{
    margin: 30rpx 15rpx 0 40rpx;
  }
</style>
